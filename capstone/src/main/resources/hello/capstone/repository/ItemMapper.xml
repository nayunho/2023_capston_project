<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hello.capstone.repository.ItemMapper">

	<insert id="saveItem">
        insert into item(shopidx, itemname, itemnotice, cost, salecost, quantity, image, category, starttime, endtime) 
        values(#{shopidx},#{itemname}, #{itemnotice}, #{cost},#{salecost},#{quantity},#{image},#{category}, #{starttime}, #{endtime});
    </insert>


	<update id="updateItem">
        update item set 
        shopidx = #{shopidx}, itemname = #{itemname}, itemnotice = #{itemnotice}, cost = #{cost}, salecost = #{salecost}, quantity = #{quantity}, image = #{image}, category = #{category}, starttime = #{starttime}, endtime = #{endtime}
        where itemidx = #{itemidx}   
    </update>

	<select id="findByShopIdxAndItemname" resultType="item">
		select * from item where shopidx = #{shopidx} and itemname = #{itemname};
	</select>
	
    <select id="findByItemIdx" resultType = "Item">
	   	select *
	   	from item
	   	where itemidx = #{itemidx}
    </select>

	<select id = "getItems" resultType = "Item">
		select * 
		from item 
		where shopidx = #{shopidx} and endtime &gt;= now();
	</select>

	<delete id ="itemDelete">
		delete
		from item
		where itemidx = #{itemidx};
	</delete>
	
	<select id = "reservationCheck">
		select count(*)
		from reservation 
		where itemidx = #{itemidx} and confirm != 'true';
	
	</select>

	<insert id="pushAlarm">
        insert into alarm (memberidx, shopidx,regisdate)
		select b.memberidx, b.shopidx,NOW() 
		from bookmarks b
		where b.shopidx = #{shopidx};
   </insert>
   
   <delete id="deleteTimeoutAlarm">
        delete 
		from alarm
		where TIMESTAMPDIFF(hour, regisdate, NOW()) &gt;= 24;
   </delete>
   
   <delete id="deleteReadAlarm">
        delete 
		from alarm
		where shopidx = #{shop.shopidx} and memberidx = #{member.memberidx}
   </delete>
	
	<select id = "getAlarm" resultType="Map">
		select s.*, a.regisdate as 'before'
		from shop s
		inner join alarm a on s.shopidx = a.shopidx
		where a.memberidx = #{memberidx}
		order by a.regisdate asc;
	</select>
	
	<select id = "getQuantity">
		select quantity
		from item
		where itemidx = #{itemidx};
	</select>
	
	<insert id = "reservation">
		insert into reservation(memberidx, shopidx, itemidx, number, redate) 
		values(#{memberidx}, #{shopidx}, #{itemidx}, #{number}, #{redate});
	</insert>
	
	<update id = "reduceQuantity">
		update item set quantity = quantity - #{number}
		where itemidx = #{itemidx};
	</update>
	
	<update id = "reservationConfirm">
		update reservation set confirm = true
		where reservationidx = #{ridx};
	</update>
	
	<delete id = "reservationDelete">
		delete from reservation
		where reservationidx = #{ridx};
	</delete>
	
	<select id="getReservations" resultType="map">
		SELECT r.reservationidx, s.shopidx, s.shopname, s.shopaddress, i.itemidx, i.itemname, i.image, r.number
		FROM reservation r
		JOIN shop s ON r.shopidx = s.shopidx
		JOIN item i ON r.itemidx = i.itemidx
		WHERE r.memberidx = #{memberidx} and r.confirm = #{confirm};
	</select>
	
	
	<delete id ="reservationCancelBusiness">
		delete
		from reservation
		where reservationidx = #{reservationIdx};
	</delete>
	
	<update id = "increaseQuantity">
		update item set quantity = quantity + #{number}
		where itemidx = #{itemidx}; 
	</update>
	
	<update id="decreaseTrust">
       UPDATE member
       SET trust = trust - 1
       WHERE memberidx IN (
           SELECT r.memberidx
           FROM reservation AS r
           LEFT JOIN item AS i ON r.itemidx = i.itemidx
           WHERE i.endtime &lt;= #{time} AND r.confirm = 'wait'
       );
   </update>
   
   <update id="setConfirmToFalse">
       UPDATE reservation AS r
       INNER JOIN item AS i ON r.itemidx = i.itemidx
       SET r.confirm = 'false'
       WHERE i.endtime &lt;= #{time} AND r.confirm = 'wait';
   </update>
</mapper>